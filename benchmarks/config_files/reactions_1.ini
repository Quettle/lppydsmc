name = 'reactions_1_11'
directory = '../results/'

use_poisson = False
use_dsmc = True
use_fluxes = True
use_particles_initialization = False
use_reactions = True
use_monitoring = True
use_plotting = False
use_verbose = False

[simulation]
time_step = 1e-7
iterations = 1000
seed = 91

    [[integration]]
        [[[default]]]
            scheme = euler_explicit
            fn = 'default'

[monitoring]
period_saving = 100
period_adding = 1
offset = 0

[plotting]
period = 10
plot_distribution = True

[verbose]
period = 100

[system]
dz = 0.001
    [[points]]
    p1 = 0,0
    p2 = 0,0.001
    p3 = 0.001,0.001
    p4 = 0.001,0

    [[reflect_fns]]
        [[[default]]]
            reflect_fn = 'diffusive'
            generic_args = 'cp', 'ct', 'normal_vectors', 'mass'
            [[[[args]]]]
                temperature = 300
    [[out_boundaries]]
    out_boundaries = 0,

[dsmc]
use_collisions = False
use_same_mass = True
    [[mean_number_per_cell]]
        [[[I]]]
        mean_number_per_cell = 1000
        [[[I-]]]
        mean_number_per_cell = 1000

    [[grid]]
    max_size = 3000
    resolutions = 1,1  # 0D

[species]
    [[list]]
        [[[I]]]
        density = 1.6e22 # no injection whatsoever
        charge = 0
        mass = 216e-27
        radius = 2e-10
        [[[I-]]]
        density = 1.6e22
        charge = -1.6e19
        mass = 216e-27
        radius = 2e-10
    # [[initialization]]
        # species = 'I','I-'
        # types = 'maxwellian','maxwellian'
        # [[[params]]]
          #  I = 300,
          #  I- = 300,

[fluxes]
pi1 = 0,0
pi2 = 0,0.001
    [[species]]
        [[[I-]]]
        density = 3.2e22
        temperature = 300
        drift = 0

[reactions]
boundaries = 'I- : I',
    [[proba]]
        [[[I-]]]
            proba_fn = '''import numpy as np
def proba_fn(size):
    proba = np.random.choice(a=np.array([0,1], dtype=int), size = size, p = np.array([0.7,0.3]))
    return proba'''


